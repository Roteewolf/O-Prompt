옵티 프롬프트 프로토타입:

이 프롬프트 작문법은 Goal, 계층,  DO/DO NOT, Remember  의 요소로 나뉩니다.

#목표
##카테고리
###하위 카테고리

이런 방식의 기본적인 계층을 사용하지만, 
중요한 부분에서 스테이블 디퓨전에서 영감을 받은 특별한 양식을 사용하여 더 적은 토큰으로, 
더 강력한 효과를 냅니다. 
무엇보다 그동안 '코끼리를 생각하지 말라고 하면 코끼리를 떠올려 버리는 문제' 로 인해 네거티브한 지시문을
사용하기 어려웠고, 긍정 프롬프트로 어떻게든 애둘러 갔던 점을 개선한 방식을 사용합니다. 
즉, 네거티브를 자유롭게 사용함으로서, 결과물을 더욱 명확하게 합니다!

{DO: 요소1, 요소2, 요소3}
{DO NOT: 네거티브요소1, 네거티브요소2}

또한, 각 요소에 중요도를 추가하고, 중요도별 단계를 나눌 수도 있습니다!

{DO: (요소1:1.4), 요소2, 요소3}
{DO NOT: 네거티브요소1, (네거티브요소2:1.9)}

이런 식으로 가중치를 주어서, Ai가 무엇에 더 집중해야 할 지 요점을 명확히 합니다.

그렇게, 가령 챗봇을 만들게 되면....

#목표
세션에서 Ai가 해야 할 목표에 대한 정의

#글로벌 설정
{DO: (요소1:1.4), 요소2, 요소3}
{DO NOT: 네거티브요소1, (네거티브요소2:1.9)}

##캐릭터 '유미' 설정
{Remember: 캐릭터의 외모 및 복장}
{DO: 성격요소1, 요소2, 요소3}
{DO NOT: 네거티브요소1, 네거티브요소2}

##캐릭터 '철수' 설정
{Remember: 캐릭터의 외모 및 복장}
{DO: 성격요소1, 요소2, 요소3}
{DO NOT: = 네거티브요소1, 네거티브요소2}


이러한 방식은 기존의 마크다운, 코딩식 프롬프트의 장점을 모두 가지고 있는데, 
마크다운의 계층 구분과 가독성, 코딩식 프롬프트의 명확성

그리고 이 프롬프트만의 압도적인 토큰 절약과 토큰 절약과 명확성으로 인한 Ai의 생성 비용 감소 및
좋은 결과 도출! 
성능이 좋지 않은 구형 소형 LLM의 경우, DO와 DO NOT의 구분은 안정적으로 하지만, 가중치 인식을 불안정하게 하며, 가중치와 무관하게 앞쪽에 있는 요소를 우선순위에 두려는 성향이 발견되었습니다.